version: '1.0'

mode: parallel

stages:
- build
- test
- release

steps:

  SetupEnvironment:
    title: Setup environment
    image: &testbed chartmuseum/testbed:latest
    commands:
    - make clean
    - cf_export GOCACHE="${{CF_VOLUME_PATH}}/gocache"
    - cf_export GOPATH="${{CF_VOLUME_PATH}}/gopath"
    - make bootstrap
    - cf_export VERSION="$(make get-version)"
    - cf_export VERSION_RELEASED="$(make version-released && echo true || echo false)"
    when:
      steps:
      - name: main_clone
        on:
        - success

  BuildPlatformBinaries:
    type: parallel
    stage: build
    steps:
      BuildPlatformBinaryLinux:
        title: Build Linux binary
        image: *testbed
        commands:
        - make build-linux
      BuildPlatformBinaryMac:
        title: Build Mac binary
        image: *testbed
        commands:
        - make build-mac
      BuildPlatformBinaryWindows:
        title: Build Windows binary
        image: *testbed
        commands:
        - make build-windows
    when: &post_setup
      steps:
      - name: SetupEnvironment
        on:
        - success

  BuildDockerImage:
    type: build
    stage: build
    title: Build Docker image
    image_name: ${{CF_REPO_OWNER}}/chartmuseum
    when: &post_linux_binary_build
      steps:
      - name: BuildPlatformBinaryLinux
        on:
        - success

  RunUnitTests:
    stage: test
    title: Run unit tests
    image: *testbed
    commands:
    - make test && touch UNIT_TEST_SUCCESS
    when: *post_setup

  RunAcceptanceTests:
    stage: test
    title: Run acceptance tests
    image: *testbed
    commands:
    - make acceptance && touch ACCEPTANCE_TEST_SUCCESS
    when: *post_linux_binary_build
